
<form><textarea id="code" name="code">
#include

int main(int argc, char *argv[]) {

  /* An annoying "Hello World" example */
  for (auto i = 0; i < 0xFFFF; i++)
    cout << "Hello, World!" << endl;

  char c = '\n';
  unordered_map <string, vector<string> > m;
  m["key"] = "\\\\"; // this is an error

  return -2e3 + 12l;
}

</textarea></form>



<div id="messages"></div>
<input id="chat-input" type="text"></input>

<!--

var ph = require("phoenix_html");
var output = '';
for (var property in ph) {
          console.log(property + ":" + ph[property]);
          output += property+'; ';
        }
        alert(output);

-->

<script src="<%= static_path(@conn, "/js/codemirror/addon/edit/matchbrackets.js") %>"></script>
<link rel="stylesheet" href="<%= static_path(@conn, "/js/codemirror/addon/hint/show-hint.css") %>">
<script src="<%= static_path(@conn, "/js/codemirror/addon/hint/show-hint.js") %>"></script>
<script src="<%= static_path(@conn, "/js/codemirror/mode/clike/clike.js") %>"></script>
<script>

// To use Phoenix channels, the first step is to import Socket
// and connect at the socket path in "lib/web/endpoint.ex":
socket.connect();

// Now that you are connected, you can join channels with a topic:
var channel = socket.channel("room:lobby", {});

var chatInput = document.querySelector("#chat-input");
var messagesContainer = document.querySelector("#messages");

chatInput.addEventListener("keypress", function (event) {
  if (event.keyCode === 13) {
    channel.push("new_msg", { body: chatInput.value });
    chatInput.value = "";
  }
});


channel.on("new_msg", function (payload) {
  var output = '';
  var entry = payload.body["from"];
  for (var property in entry) {
    console.log(property + ":" + entry[property].toString());
    output += property + ":" + entry[property].toString() + '; ';
  }
  console.log(output);
  var messageItem = document.createElement("li");
  messageItem.innerText = "[" + Date() + "] " + output;
  messagesContainer.appendChild(messageItem);
});

channel.join().receive("ok", function (resp) {
  console.log("Joined successfully", resp);
}).receive("error", function (resp) {
  console.log("Unable to join", resp);
});


var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
  lineNumbers: true,
  extraKeys: {"Ctrl-Space": "autocomplete"},
  mode: "text/x-csrc"
});

editor.on("change", function(e, changeObj) {
        var output = '';
        //for (var property in changeObj) {
        //  console.log(property + ":" + changeObj[property]);
        //  output += property+'; ';
       // }
        console.log("--------");
       channel.push("new_msg", {body: changeObj})
      });

</script>